import java.util.Scanner;

public class QuixoTicTacToe {
    private char[][] board;
    private char currentPlayer;
    
    public QuixoTicTacToe() {
        board = new char[5][5];
        currentPlayer = 'X';
        initializeBoard();
    }
    
    public void initializeBoard() {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                board[i][j] = '-';
            }
        }
    }
    
    public void printBoard() {
        System.out.println("-------------");
        for (int i = 0; i < 5; i++) {
            System.out.print("| ");
            for (int j = 0; j < 5; j++) {
                System.out.print(board[i][j] + " | ");
            }
            System.out.println("\n-------------");
        }
    }
    
    public boolean isBoardFull() {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (board[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }
    
    public boolean isMoveValid(int row, int col) {
        if (row < 0 || row >= 5 || col < 0 || col >= 5) {
            return false;
        }
        return board[row][col] == '-';
    }
    
    public void makeMove(int row, int col) {
        board[row][col] = currentPlayer;
    }
    
    public boolean checkWin() {
        // Check rows
        for (int i = 0; i < 5; i++) {
            if (board[i][0] != '-' && board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][2] == board[i][3] && board[i][3] == board[i][4]) {
                return true;
            }
        }
        
        // Check columns
        for (int j = 0; j < 5; j++) {
            if (board[0][j] != '-' && board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[2][j] == board[3][j] && board[3][j] == board[4][j]) {
                return true;
            }
        }
        
        // Check diagonals
        if (board[0][0] != '-' && board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[2][2] == board[3][3] && board[3][3] == board[4][4]) {
            return true;
        }
        
        if (board[0][4] != '-' && board[0][4] == board[1][3] && board[1][3] == board[2][2] && board[2][2] == board[3][1] && board[3][1] == board[4][0]) {
            return true;
        }
        
        return false;
    }
    
    public void switchPlayer() {
        if (currentPlayer == 'X') {
            currentPlayer = 'O';
        } else {
            currentPlayer = 'X';
        }
    }
    
    public static void
